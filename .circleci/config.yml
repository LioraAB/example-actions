version: 2
jobs:
  build:
    docker:
      - image: circleci/node:12
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install Docker Compose
          command: |
            sudo apt update
            sudo curl -L "https://github.com/docker/compose/releases/download/1.26.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
            sudo npm install @neuralegion/nexploit-cli -g --unsafe-perm=true || true
            sudo apt install jq -y
      - setup_remote_docker
      - run:
         name: Save eniroment variables
         command: |
            printf "NEXPLOIT_TOKEN=$NEXPLOIT_TOKEN\nREPEATER=$REPEATER\n" > .env
            cat .env
      - run:
         name: Docker-Compose
         command: |
            echo $NEXPLOIT_TOKEN
            echo $REPEATER
            docker-compose --env-file=.env up -d
            docker-compose config
      - run:
          name: Starting Nexploit scan 🏁
          command: >
              echo export SCAN_ID=$(nexploit-cli scan:run --token $NEXPLOIT_TOKEN
              --repeater $REPEATER
              --name "CIRCLECI TEST"
              --crawler http://brokencrystals.local
              --smart) >> "$BASH_ENV"
      - run: 
          name: Get the output scan url 🔗
          command: |
            printf "Scan was started with ID https://nexploit.app/scans/${SCAN_ID}"
      - run:
          name: Waiting for issues ⏳
          command: >
              (nexploit-cli scan:polling
              --interval 30s
              --timeout 20m
              --token $NEXPLOIT_TOKEN
              --breakpoint medium_issue ${SCAN_ID})
run:
          name: Stop Scan
          when: on_fail
          command: |
              nexploit-cli scan:stop --token lfjlqct.nexa.63fphe9ajwm60vxjb2fluxaczs68sj5b ${SCAN_ID}
                    GET_ID=$(curl -X 'GET' 'https://app.neuralegion.com/api/v1/scans/'$SCAN_ID'/issues' -H 'accept: application/json' -H 'Authorization: Api-Key lfjlqct.nexa.63fphe9ajwm60vxjb2fluxaczs68sj5b' | jq '.[].id' )
                    ISSUES_ID_ARRAY=$(sed -e 's/^"//' -e 's/"$//' <<<"$GET_ID")
                    a=(); while read -r line; do a+=("$line"); done <<<"$ISSUES_ID_ARRAY"; declare a;
                    GET_NAME=$(curl -X 'GET' 'https://app.neuralegion.com/api/v1/scans/'$SCAN_ID'/issues' -H 'accept: application/json' -H 'Authorization: Api-Key lfjlqct.nexa.63fphe9ajwm60vxjb2fluxaczs68sj5b' | jq '.[].name' )
                    ISSUES_NAME_ARRAY=$(sed -e 's/^"//' -e 's/"$//' <<<"$GET_NAME")
                    b=(); while read -r line; do b+=("$line"); done <<<"$ISSUES_NAME_ARRAY"; declare b;
                    GET_DETAILS=$(curl -X 'GET' 'https://app.neuralegion.com/api/v1/scans/'$SCAN_ID'/issues' -H 'accept: application/json' -H 'Authorization: Api-Key lfjlqct.nexa.63fphe9ajwm60vxjb2fluxaczs68sj5b' | jq '.[].details' )
                    ISSUES_DETAILS_ARRAY=$(sed -e 's/^"//' -e 's/"$//' <<<"$GET_DETAILS")
                    c=(); while read -r line; do c+=("$line"); done <<<"$ISSUES_DETAILS_ARRAY"; declare c;
                    GET_SEVERITY=$(curl -X 'GET' 'https://app.neuralegion.com/api/v1/scans/'$SCAN_ID'/issues' -H 'accept: application/json' -H 'Authorization: Api-Key lfjlqct.nexa.63fphe9ajwm60vxjb2fluxaczs68sj5b' | jq '.[].severity' )
                    ISSUES_SEVERITY_ARRAY=$(sed -e 's/^"//' -e 's/"$//' <<<"$GET_SEVERITY")
                    d=(); while read -r line; do d+=("$line"); done <<<"$ISSUES_SEVERITY_ARRAY"; declare d;
                    GET_PROTOCOL=$(curl -X 'GET' 'https://app.neuralegion.com/api/v1/scans/'$SCAN_ID'/issues' -H 'accept: application/json' -H 'Authorization: Api-Key lfjlqct.nexa.63fphe9ajwm60vxjb2fluxaczs68sj5b' | jq '.[].protocol' )
                    ISSUES_PROTOCOL_ARRAY=$(sed -e 's/^"//' -e 's/"$//' <<<"$GET_PROTOCOL")
                    e=(); while read -r line; do e+=("$line"); done <<<"$ISSUES_PROTOCOL_ARRAY"; declare e;
                    GET_EXPOSURE=$(curl -X 'GET' 'https://app.neuralegion.com/api/v1/scans/'$SCAN_ID'/issues' -H 'accept: application/json' -H 'Authorization: Api-Key lfjlqct.nexa.63fphe9ajwm60vxjb2fluxaczs68sj5b' | jq '.[].exposure' )
                    ISSUES_EXPOSURE_ARRAY=$(sed -e 's/^"//' -e 's/"$//' <<<"$GET_EXPOSURE")
                    f=(); while read -r line; do f+=("$line"); done <<<"$ISSUES_EXPOSURE_ARRAY"; declare f;
                    GET_CVSS=$(curl -X 'GET' 'https://app.neuralegion.com/api/v1/scans/'$SCAN_ID'/issues' -H 'accept: application/json' -H 'Authorization: Api-Key lfjlqct.nexa.63fphe9ajwm60vxjb2fluxaczs68sj5b' | jq '.[].cvss' )
                    ISSUES_CVSS_ARRAY=$(sed -e 's/^"//' -e 's/"$//' <<<"$GET_CVSS")
                    g=(); while read -r line; do g+=("$line"); done <<<"$ISSUES_CVSS_ARRAY"; declare g;
                    GET_CWE=$(curl -X 'GET' 'https://app.neuralegion.com/api/v1/scans/'$SCAN_ID'/issues' -H 'accept: application/json' -H 'Authorization: Api-Key lfjlqct.nexa.63fphe9ajwm60vxjb2fluxaczs68sj5b' | jq '.[].cwe' )
                    ISSUES_CWE_ARRAY=$(sed -e 's/^"//' -e 's/"$//' <<<"$GET_CWE")
                    h=(); while read -r line; do h+=("$line"); done <<<"$ISSUES_CWE_ARRAY"; declare h;
                    GET_TIME=$(curl -X 'GET' 'https://app.neuralegion.com/api/v1/scans/'$SCAN_ID'/issues' -H 'accept: application/json' -H 'Authorization: Api-Key lfjlqct.nexa.63fphe9ajwm60vxjb2fluxaczs68sj5b' | jq '.[].time' )
                    ISSUES_TIME_ARRAY=$(sed -e 's/^"//' -e 's/"$//' <<<"$GET_TIME")
                    j=(); while read -r line; do i+=("$line"); done <<<"$ISSUES_TIME_ARRAY"; declare j;
                    echo "The number of issues we found is is ${#a[*]}"
                    len=${#a[*]}
                    i=0
                    while [ $i -lt $len ]; do
                    echo " "
                    echo " "
                    echo "ID OF THE SCAN IS    ${a[$i]}"
                    echo "NAME    "${b[$i]}
                    echo "DETAILS    "${c[$i]}
                    echo "SEVERITY    "${d[$i]}
                    echo "PROTOCOL    "${e[$i]}
                    echo "EXPOSURE    "${f[$i]}
                    echo "CVSS    "${g[$i]}
                    echo "CWE    "${h[$i]}
                    echo "TIME    "${j[$i]}
                    let i=i+1
                    done